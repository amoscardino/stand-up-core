@page "/credentials"
@inherits StandUpCore.CredentialsBase

<h2 class="mb-3">
    Jira Credentials
</h2>

<table class="table">
    <thead>
        <tr>
            <th>Site</th>
            <th>Email</th>
            <th></th>
        </tr>
    </thead>

    <tbody>
        @for (var i = 0; i < Credentials.Count; i++)
        {
            var credential = Credentials[i];

            <tr>
                <td>@credential.SiteUrl</td>
                <td>@credential.Email</td>
                <td class="text-right">
                    <button type="button"
                            class="btn btn-outline-danger btn-sm"
                            onclick="@(e => DeleteCredential(credential.Id))">
                        Delete
                    </button>
                </td>
            </tr>
        }

        @if (!Credentials.Any())
        {
            <tr>
                <td colspan="3" class="text-center text-muted">
                    No credentials found.
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="row justify-content-center">
    <div class="col-6">
        <div class="card">
            <div class="card-header">
                New Credentials
            </div>

            <div class="card-body">
                <p>
                    <a href="https://confluence.atlassian.com/cloud/api-tokens-938839638.html" target="_blank">Instructions for generating an API Token.</a>
                </p>

                <EditForm Model="@NewCredential" OnValidSubmit="@SaveNewCredential">
                    <DataAnnotationsValidator />

                    <div class="form-group">
                        <label for="SiteUrl">Site URL</label>
                        <InputText id="SiteUrl" bind-Value="@NewCredential.SiteUrl" Class="form-control" />
                        <div class="form-text text-danger">
                            <ValidationMessage For="@(() => NewCredential.SiteUrl)" />
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="Email">Email Address</label>
                        <InputText id="Email" bind-Value="@NewCredential.Email" Class="form-control" />
                        <div class="form-text text-danger">
                            <ValidationMessage For="@(() => NewCredential.Email)" />
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="ApiToken">API Token</label>
                        <InputText id="ApiToken" bind-Value="@NewCredential.ApiToken" Class="form-control" />
                        <div class="form-text text-danger">
                            <ValidationMessage For="@(() => NewCredential.ApiToken)" />
                        </div>
                    </div>

                    <button type="submit" class="btn btn-primary">Submit</button>
                </EditForm>
            </div>
        </div>
    </div>
</div>
